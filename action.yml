name: Provision and Deploy via CodeWorks Infra

inputs:
  host:
    required: true
    description: EC2 host IP or domain
  ssh_key:
    required: true
    description: Private SSH key to connect to EC2
  ghcr_pat:
    required: true
    description: GitHub token with read:packages for GHCR

runs:
  using: composite
  steps:
    - name: Install js-yaml
      shell: bash
      working-directory: ${{ github.action_path }}
      run: npm install js-yaml

    - name: Generate services.json from docker-compose
      shell: bash
      run: |
        node ${{ github.action_path }}/extract-services.mjs $GITHUB_WORKSPACE/docker-compose.yml $GITHUB_WORKSPACE/services.json

    - name: Setup SSH
      shell: bash
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.ssh_key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "StrictHostKeyChecking=no" >> ~/.ssh/config

    - name: Docker Auth
      shell: bash
      run: echo "${{ inputs.ghcr_pat }}" | docker login ghcr.io -u ghcr-pull-bot --password-stdin

    - name: Upload deploy files and envs
      shell: bash
      run: |
        ssh ubuntu@${{ inputs.host }} "sudo mkdir -p /opt/deploy && sudo chown ubuntu:ubuntu /opt/deploy"

        FILES="docker-compose.yml services.json"

        echo "üîç Searching for .env.* files in $GITHUB_WORKSPACE"
        while IFS= read -r file; do
          echo "üì¶ Adding $file to scp upload"
          FILES="$FILES $file"
        done < <(find "$GITHUB_WORKSPACE" -maxdepth 6 -type f -name '.env.*')

        echo "üóÇÔ∏è Final FILES list: $FILES"
        scp -r $FILES ubuntu@${{ inputs.host }}:/opt/deploy/


    - name: Install and run Ansible
      shell: bash
      run: |
        ssh ubuntu@${{ inputs.host }} <<'EOF'
          set -e
          export PATH=$PATH:/usr/local/bin:/usr/bin:/bin
          cd /opt/deploy

          if ! command -v docker >/dev/null 2>&1; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            rm get-docker.sh
          fi

          if ! docker compose version >/dev/null 2>&1; then
            echo "‚ùó docker compose v2 not available"
            exit 1
          fi

          if ! command -v ansible-playbook >/dev/null 2>&1; then
            echo "üì¶ Installing Ansible..."
            sudo apt update
            sudo apt install -y ansible
          fi

          sudo systemctl enable docker
          sudo systemctl start docker

          docker login ghcr.io -u ghcr-pull-bot -p ${{ inputs.ghcr_pat }}
          ansible-playbook ansible/playbook.yml -i localhost,
        EOF
